document.addEventListener('DOMContentLoaded', () => {
    const themeToggleButton = document.getElementById('theme-toggle-button');
    const accentPickerContainer = document.getElementById('accent-picker-container');
    const root = document.documentElement; // –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç <html>

    // --- –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º ---
    const sunIcon = '‚òÄÔ∏è'; // –ò–∫–æ–Ω–∫–∞ —Å–æ–ª–Ω—Ü–∞
    const moonIcon = 'üåô'; // –ò–∫–æ–Ω–∫–∞ –ª—É–Ω—ã

    function applyTheme(theme) {
        root.setAttribute('data-theme', theme); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç data-theme –Ω–∞ <html>
        if (themeToggleButton) {
            themeToggleButton.innerHTML = theme === 'light' ? moonIcon : sunIcon; // –ú–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫—É –Ω–∞ –∫–Ω–æ–ø–∫–µ
            themeToggleButton.title = theme === 'light' ? '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Ç–µ–º–Ω—É—é —Ç–µ–º—É' : '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É'; // –ú–µ–Ω—è–µ–º title –∫–Ω–æ–ø–∫–∏
        }
        localStorage.setItem('theme', theme); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä —Ç–µ–º—ã –≤ localStorage
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É –∏–ª–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ —Å–∏—Å—Ç–µ–º–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
    const savedTheme = localStorage.getItem('theme') ||
                      (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
    applyTheme(savedTheme); // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É

    if (themeToggleButton) {
        themeToggleButton.addEventListener('click', () => {
            let newTheme = root.getAttribute('data-theme') === 'light' ? 'dark' : 'light'; // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–≤—É—é —Ç–µ–º—É
            applyTheme(newTheme); // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—É—é —Ç–µ–º—É
        });
    }

    // --- –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–∫—Ü–µ–Ω—Ç–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ ---
    function applyAccentColor(colorVar) {
        root.style.setProperty('--current-accent-color', colorVar); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CSS-–ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        localStorage.setItem('accent-color', colorVar); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä —Ü–≤–µ—Ç–∞

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞
        if (accentPickerContainer) {
            const accentButtons = accentPickerContainer.querySelectorAll('.accent-option');
            accentButtons.forEach(btn => {
                btn.classList.remove('active-accent');
                if (btn.getAttribute('data-color') === colorVar) {
                    btn.classList.add('active-accent');
                }
            });
        }
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –∞–∫—Ü–µ–Ω—Ç–Ω—ã–π —Ü–≤–µ—Ç –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ü–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const savedAccentColor = localStorage.getItem('accent-color') || 'var(--accent-color-1)';
    applyAccentColor(savedAccentColor); // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç

    if (accentPickerContainer) {
        const accentButtons = accentPickerContainer.querySelectorAll('.accent-option');
        accentButtons.forEach(button => {
            button.addEventListener('click', () => {
                const selectedColor = button.getAttribute('data-color'); // –ü–æ–ª—É—á–∞–µ–º —Ü–≤–µ—Ç –∏–∑ –∞—Ç—Ä–∏–±—É—Ç–∞ data-color
                applyAccentColor(selectedColor); // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ü–≤–µ—Ç
            });
        });
    }

    // --- –ê–∫—Ç–∏–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ ---
    // –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –≤—ã–¥–µ–ª–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const currentLocation = window.location.pathname.split('/').pop() || 'index.html';
    const navLinks = document.querySelectorAll('header ul li a');
    navLinks.forEach(link => {
        const linkPath = link.getAttribute('href').split('/').pop() || 'index.html'; // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ href —Å—Å—ã–ª–∫–∏
        if (linkPath === currentLocation) {
            link.classList.add('active'); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å 'active', —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –≤ CSS
        } else {
            link.classList.remove('active');
        }
    });
});